{
	"Motion div": {
		"prefix": "md",
		"body": [
			"<motion.div",
			"initial={{ opacity: 0 }}",
			"animate={{",
			"opacity: 1,",
			"transition:",
			"{",
			"delay: 2.4,",
			"duration: 0.4,",
			"ease: 'easeIn'},}}",
			"className='dv'>",
			"</motion.div>"
		],
		"description": "Require module in lua"
	},
	"basic component export": {
		"prefix": "ef",
		"body": [
			"export function ${1:name}(){",
			"return(",
			"<div>${2:data}</div>",
			")}"
		],
		"description": "Require module in lua"
	},
	"basic component default export": {
		"prefix": "edf",
		"body": [
			"export default function ${1:name}(): JSX.Element{",
			"return(",
			"<div>${2:data}</div>",
			")}"
		],
		"description": "Require module in lua"
	},
	"myre2": {
		"prefix": "pc",
		"body": [
			"import { PrismaClient } from '@prisma/client';",
			"let prisma: PrismaClient;",
			"declare const global: any;",
			"if (process.env.NODE_ENV === 'production') {",
			"prisma = new PrismaClient();",
			"} else {",
			"if (!global.prisma) {",
			"global.prisma = new PrismaClient();",
			"}",
			"prisma = global.prisma;",
			"}",
			"export default prisma;"
		],
		"description": "prismaClient"
	},
	"animejsObject": {
		"prefix": "ani",
		"body": [
			" const ${1:name} = anime({",
			"targets: '.moving-box',",
			"keyframes: [",
			"{ translateY: -40 }],",
			"delay: anime.stagger(100),",
			"loop: true,",
			"direction: 'alternate',",
			"autoplay: false,",
			"duration: 3000,"
		],
		"description": "animejs object "
	},
	"viTest template": {
		"prefix": "vt",
		"body": [
			"import { expect, test } from 'vitest'",
			"import { ${1:name} } from ' ${1:name}'",
			"test('adds 1 + 2 to equal 3', () => {",
			"expect( ${1:name}(1, 2)).toBe(3)",
			")}"
		],
		"description": "vitest template"
	},
	"unitTest": {
		"prefix": "te",
		"body": [
			"test('${1:name}', async () => {",
			"       expect(${2:function}).toBe();",
			"}"
		],
		"description": "unit test"
	}
}
